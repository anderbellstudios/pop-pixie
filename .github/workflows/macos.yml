name: Build and package macOS

# To create a signing certificate:
#   1. openssl req -newkey rsa:2048 -keyout pop-pixie.key -out pop-pixie.csr
#   2. Sign with Apple as a Developer ID Application
#   3. openssl x509 -in pop-pixie.cer -inform DER -out pop-pixie.pem -outform PEM
#   4. openssl pkcs12 -export -legacy -out pop-pixie.p12 -inkey pop-pixie.key -in pop-pixie.pem # You must specify an export password
#   5. base64 -i pop-pixie.p12 | pbcopy
#   6. pbpaste | gh secret set MACOS_CERTIFICATE
#   6. gh secret set MACOS_CERTIFICATE_PWD # The export password
#   7. security find-identity -v # Get the short alphanumeric string in brackets
#   8. gh secret set MACOS_IDENTITY_ID

on: workflow_call

jobs:
  build:
    name: 'Build for macOS'
    uses: ./.github/workflows/build.yml
    with:
      target_platform: StandaloneOSX
    secrets: inherit

  package_macos:
    name: Package macOS build
    needs: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: installers/macos

      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          run-id: ${{ needs.build.outputs.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: installers/macos/public

      # https://localazy.com/blog/how-to-automatically-sign-macos-apps-using-github-actions

      - name: Prepare certificate step 1
        run: 'echo $MACOS_CERTIFICATE | base64 - --decode > certificate.p12'
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}

      - name: Prepare certificate step 2
        run: 'security create-keychain -p password build.keychain'

      - name: Prepare certificate step 3
        run: 'security default-keychain -s build.keychain'

      - name: Prepare certificate step 4
        run: 'security unlock-keychain -p password build.keychain'

      - name: Prepare certificate step 5
        run: 'security import certificate.p12 -P $MACOS_CERTIFICATE_PWD -k build.keychain -T /usr/bin/codesign'
        env:
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}

      - name: Prepare certificate step 6
        run: 'security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password build.keychain'

      - name: Sign app
        run: '/usr/bin/codesign --force -s $MACOS_IDENTITY_ID "installers/macos/public/Pop Pixie.app" -v'
        env:
          MACOS_IDENTITY_ID: ${{ secrets.MACOS_IDENTITY_ID }}

      - name: Zip app
        run: 'ditto -c -k --sequesterRsrc --keepParent "installers/macos/public/Pop Pixie.app" pop-pixie-macos.zip'

      - name: Notarize app
        run: 'xcrun notarytool submit pop-pixie-macos.zip --apple-id $APPLE_ID --password $APPLE_ID_PASSWORD --team-id $APPLE_TEAM_ID --wait'
        env:
          APPLE_ID: shrug
          APPLE_ID_PASSWORD: shrug
          APPLE_TEAM_ID: shrug

      - name: Create DMG
        run: 'hdiutil create -srcfolder installers/macos/public -volname "Install Pop Pixie" "Install Pop Pixie.dmg"'

      - uses: actions/upload-artifact@v4
        with:
          name: 'macOS DMG'
          path: 'Install Pop Pixie.dmg'
