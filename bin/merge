#!/bin/bash

if [ "$(git rev-parse --abbrev-ref HEAD)" != "develop" ]; then
  echo "Switch to develop branch before attempting merge"
  exit 1
fi

if [ -n "$(git status --porcelain)" ]; then
  echo "Commit or stash uncommitted changes before attempting merge"
  exit 1
fi

run() {
  # Takes a command and arguments as input
  # Prints the current branch and the command
  # Executes the command

  printf "\e[0;32m$(git rev-parse --abbrev-ref HEAD)\e[0m> "
  echo "$@"
  "$@"
}

merge_branch() {
  run git checkout $1 &&
  {
    run git pull && run git merge $2 || {
      printf "\e[1;31mFailed to merge $2 into $1\e[0m\n"
      run git merge --abort
      run git checkout $2
      exit 1
    }
  }
}

push_branch() {
  if [ "$(git rev-parse --abbrev-ref HEAD)" != "$1" ]; then
    run git checkout $1
  fi &&
  run git push
}

merge_branch main develop &&
merge_branch mission-training develop &&
push_branch mission-training &&
push_branch main &&
push_branch develop || {
  printf "\e[1;31mSomething went wrong\e[0m\n"
  run git checkout develop
  exit 1
}
